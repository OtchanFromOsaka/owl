# ルール

このファイルは、ユーザーとAIが協力して効率的に作業するためのルールブックです。

基本的にはユーザーによって作成されますが、コンテキストはAIによっても編集できます。将来必要になる可能性のあるコンテキストを見つけたら、すぐに編集してください。

他の部分を編集する必要があると思われる場合は、まずユーザーに確認してください。

## このリポジトリのコンテキスト

AIは必要に応じて追加できます。

### プロジェクト構造

このプロジェクトはCloudflare Workersにデプロイされるホノックス（HonoX）アプリケーションで、以下の構造を持っています：

- `app/`: メインアプリケーションコード
    - `client.ts`: HonoXクライアントを使用したクライアント側エントリーポイント
    - `server.ts`: HonoXサーバーを使用したサーバー側エントリーポイント
    - `style.css`: グローバルスタイル
    - `islands/`: インタラクティブコンポーネント（クライアント側でハイドレーション）
        - `counter.tsx`: インクリメントボタン付きの単純なカウンターコンポーネント
    - `routes/`: アプリケーションルート
        - `index.tsx`: カウンターコンポーネントを含むメインページルート
        - `_renderer.tsx`: HTML構造のためのJSXレンダラー
        - `_404.tsx`: 404 Not Foundハンドラー
        - `_error.tsx`: エラーハンドラー
- `public/`: 静的アセット
- `types/`: TypeScript型定義

### ビルドとデプロイメント

- 開発サーバー: `pnpm dev` (Vite)
- ビルド: `pnpm build` (Vite + Cloudflare Workers)
- プレビュー: `pnpm preview` (Wrangler)
- デプロイ: `pnpm deploy` (Wrangler)

### テスト

- ユニットテスト: `pnpm test` (happy-dom付きVitest)
- E2Eテスト: `pnpm e2e` (Playwright)

## Git

メインブランチは常に安定しているべきです。

main-x.x.xブランチで作業し、メインブランチにマージする前にテストを実行してください。

純粋な関数やコンポーネントファイルが作成されるたびにコミットを行います。関数の更新や修正も個別にコミットされます。ただし、コミット前にbiomeとテストコマンドが実行され、成功していることが前提です。

また、開発指示とgitコミット指示は別々に与えられます。指示された関数や修正が完了したら、ユーザーに確認してください。

## Docker

ローカルのD:\dev\owlがリポジトリのルートです。

コンテナはowl-appという名前で、D:\dev\owl内のすべてがコンテナ内の/home/owl/devにマウントされています。

ユーザーはホストOS（Windows）でコンテナの作成や起動などのタスクを実行しますが、ユーザーとAIはコンテナ内で一緒に作業します。

ソフトウェアのインストールのみrootユーザーによって行われ、開発などの他のタスクはowlユーザーによって行われます。

AIは最初から~/dev（/home/owl/dev）内のowlユーザーとして作業を開始するため、コンテナを特に意識する必要はありません。

## 技術選択

パッケージマネージャーとしてpnpmを使用します。

HonoX + hono/jsx + TypeScriptを使用し、関数型プログラミング、ドメイン駆動設計、テスト駆動開発に従います。

リンターとフォーマッターにはBiomeのデフォルト設定を使用します。

ユニットテストにはVitestを、E2EテストにはPlaywrightを使用します。

## その他

純粋な関数を作成する場合、ユニットテストの成功が最優先事項です。

条件分岐のネストを浅くするために、早期リターンを使用してください。

コミット前に biome lint --write && biome format --write を実行してください。

ファイル名にはケバブケースを使用してください。

型関連のファイルはapp/typesに配置しますが、.d.tsファイルのみリポジトリルート直下のtypes/に配置します。

## コミュニケーション

すべてのコミュニケーションは日本語で行います。ソースコードへのコメントも日本語で記述します。
